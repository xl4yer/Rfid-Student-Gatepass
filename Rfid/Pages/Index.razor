@page "/"
@layout LoginLayout
@using Rfid.Models
@inject NavigationManager Nav
@inject ILocalStorageService localStorage
@inject ISnackbar snackBar
@using Microsoft.AspNetCore.SignalR.Client;

<!DOCTYPE html>
<html lang="en">
<head>
    <title>RFID Attendance System</title>
</head>
<body>
    <div class="container" id="container">
        <div class="form-container sign-in">
            <form>
                <img src="logo.jpg" height="130px" width="130px" /> <br />
                <h4>LOG IN</h4>
                <input type="email"
                       oninvalid="this.setCustomValidity(' ')"
                       placeholder="Username"
                @bind-value="username">
                <input type="password"
                       placeholder="Password"
                @bind-value="password">
                <button @onclick="(e => UserLogin())">Login</button>
            </form>
        </div>
        <div class="toggle-container">
            <div class="toggle">
                <div class="toggle-panel toggle-right">
                    <p1></p1>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

@code {
    string? username, password, message;
    List<users> xuser;
    [Parameter] public string ADMIN { get; set; } = "";

    private async Task UserLogin()
    {
        xuser = new List<users>();
        try
        {
            using (HttpClient client = new HttpClient())
            {
                client.BaseAddress = new Uri($"{Nav.BaseUri}");
                HttpResponseMessage json = await client.GetAsync($"api/User/Login?username={username}&password={password}");
                if (json.IsSuccessStatusCode)
                {
                    string content = await json.Content.ReadAsStringAsync();
                    List<users> code = JsonConvert.DeserializeObject<List<users>>(content);

                    if (code.Count > 0)
                    {
                        xuser.Add(new users()
                            {
                                userID = code[0].userID,
                                token = code[0].token,
                                name = code[0].name,
                                role = code[0].role,
                                username = code[0].username
                            });
                        await localStorage.SetItemAsStringAsync("userID", xuser[0].userID);
                        await localStorage.SetItemAsStringAsync("name", xuser[0].name);
                        await localStorage.SetItemAsStringAsync("username", xuser[0].username);
                        await localStorage.SetItemAsStringAsync("token", xuser[0].token);
                        await localStorage.SetItemAsStringAsync("role", xuser[0].role);
                        Nav.NavigateTo("/dashboard");
                    }
                    else
                    {
                        snackBar.Add($"Invalid Username or Password", Severity.Warning);
                    }
                }
                else
                {
                    snackBar.Add($"Invalid Username or Password", Severity.Warning);
                }
            }
        }
        catch (Exception ex)
        {
            //
        }
    }
}


<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Montserrat', sans-serif;
    }

    body {
        background-color: #c9d6ff;
        background: linear-gradient(to right, #e2e2e2, #c9d6ff);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        height: 100vh;
    }

    .container {
        background-color: #fff;
        border-radius: 30px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
        position: relative;
        overflow: hidden;
        width: 768px;
        max-width: 100%;
        min-height: 480px;
    }

        .container p {
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.3px;
            margin: 20px 0;
        }

        .container span {
            font-size: 12px;
        }

        .container a {
            color: #333;
            font-size: 13px;
            text-decoration: none;
            margin: 15px 0 10px;
        }

        .container button {
            background-color: #512da8;
            color: #fff;
            font-size: 12px;
            padding: 10px 45px;
            border: 1px solid transparent;
            border-radius: 8px;
            font-weight: 600;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            margin-top: 10px;
            cursor: pointer;
        }

            .container button.hidden {
                background-color: transparent;
                border-color: #fff;
            }

        .container form {
            background-color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0 40px;
            height: 100%;
        }

        .container input {
            background-color: #eee;
            border: none;
            margin: 8px 0;
            padding: 10px 15px;
            font-size: 13px;
            border-radius: 8px;
            width: 100%;
            outline: none;
        }

    .form-container {
        position: absolute;
        top: 0;
        height: 100%;
        transition: all 0.6s ease-in-out;
    }

    .sign-in {
        left: 0;
        width: 50%;
        z-index: 2;
    }

    .container.active .sign-in {
        transform: translateX(100%);
    }

    .sign-up {
        left: 0;
        width: 50%;
        opacity: 0;
        z-index: 1;
    }

    .container.active .sign-up {
        transform: translateX(100%);
        opacity: 1;
        z-index: 5;
        animation: move 0.6s;
    }

    @@keyframes move {
        0%, 49.99% {
            opacity: 0;
            z-index: 1;
        }

        50%, 100% {
            opacity: 1;
            z-index: 5;
        }
    }

    .social-icons {
        margin: 20px 0;
    }

        .social-icons a {
            border: 1px solid #ccc;
            border-radius: 20%;
            display: inline-flex;
            justify-content: center;
            align-items: center;
            margin: 0 3px;
            width: 40px;
            height: 40px;
        }

    .toggle-container {
        position: absolute;
        top: 0;
        left: 50%;
        width: 50%;
        height: 100%;
        overflow: hidden;
        transition: all 0.6s ease-in-out;
        z-index: 1000;
    }

    .container.active .toggle-container {
        transform: translateX(-100%);
        border-radius: 0 150px 100px 0;
    }

    .toggle {
        background-image: url('card.png');
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        height: 100%;
        color: #fff;
        position: relative;
        left: -100%;
        height: 100%;
        width: 200%;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
    }

    .container.active .toggle {
        transform: translateX(50%);
    }

    .toggle-panel {
        position: absolute;
        width: 50%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 0 30px;
        text-align: center;
        top: 0;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
    }

    .toggle-left {
        transform: translateX(-200%);
    }

    .container.active .toggle-left {
        transform: translateX(0);
    }

    .toggle-right {
        right: 0;
        transform: translateX(0);
    }

    .container.active .toggle-right {
        transform: translateX(200%);
    }

</style>